public class HW_7 {
   /* Задача №1

    Необходимо создать класс Employee со следующими методами:
    getBaseSalary - получить базовую ставку
    set Base Salary
    getName - получить имя
    setName
    getSalary - получить зарплату


    Задача №2

    Необходимо создать класс Worker где метод getSalary будет возвращать базовую ставку.

    Необходимо создать класс Manager в который нужно добавить следующие методы:
    getNumberOfSubordinates - получить количество подчиненных
            setNumberOfSubordinates

    в классе, метод getSalary будет возвращать значение по формуле - <базовая ставка> *
    (<количество подчиненных> / 100 * 3). Если количество подчиненных 0, то результат как у обычного рабочего.

    Необходимо создать класс Director с теми же методами, что и Manager, но метод getSalary
    должен возвращать результат по формуле - <базовая ставка> * (<количество подчиненных> / 100 * 9).
    Если количество подчиненных 0, то результат как у обычного рабочего.

    Задача №3

    Создать класс Month с полями: имя месяца, количеством дней и количеством рабочих дней. Создать класс
     MonthUtils который бы хранил подготовленные месяцы или их массивы для использования (объекты класса Month).


    Задача №4

    Необходимо создать класс Employee с полями: имя, возраст, пол и ЗП в день. Все поля сделать приватными и
     для каждого поля добавить методы set и get. Класс должен иметь метод - getSalary(Month[] monthArray),
     метод возвращает зарплату за те месяцы которые были переданы в качестве аргумента.


    Задача №5

    Необходимо создать класс Manager с полями: имя, возраст, пол, ЗП в день и количество подчиненных.
    Все поля сделать приватными и для каждого поля добавить методы set и get. Класс должен иметь метод -
    getSalary(Month[] monthArray), метод возвращает зарплату за те месяцы которые были переданы в качестве аргумента.
    К рассчитанной ЗП должно прибавляться по 1% за каждого подчиненного.


            Задача №6

    Необходимо расширить утилитарный класс EmployeeUtils из прошлого задания следующими методами:
    поиск наименьшего количества подчиненных в массиве менеджеров
    поиск наибольшего количества подчиненных в массиве менеджеров
    поиск наибольшей надбавки (разнице между базовой зарплатой и выплатой) в массиве менеджеров
    поиск наименьшей надбавки (разнице между базовой ставки и зарплатой) в массиве менеджеров */



}
